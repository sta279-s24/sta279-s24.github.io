for(d in 1:10){
print(d)
}
d
str_extract(strs, "Dr.")
strs <- c("Dr. Rob likes running",
"Dr. Beavers likes soccer",
"Daniel is a student",
"I visited Dr. L.")
str_extract(strs, "Dr.")
str_extract(strs, "^Dr.")
str_extract(strs, "Dr.")
str_extract_all(strs, "Dr.")
str_extract_all("Dr. L and Dr. Y like knitting/crochet", "Dr.")
str_extract_all(strs, "Dr.")
?str_extract_all
str_extract_all("Dr. L and Dr. Y like knitting/crochet", "Dr.")
str_extract_all(strs, "Dr.")
str_extract_all("Dr. L and Dr. Y like knitting/crochet", "Dr.")
str_extract("Dr. L and Dr. Y like knitting/crochet", "Dr.")
str_subset(strs, "Dr.")
str_subset(strs, "^Dr.")
str_subset(strs, "student$")
96/118
library(RANN)
library(patchwork)
library(tidyverse)
Rcpp::sourceCpp("~/Documents/Research/cohesion_testing/graph_tests_revised.cpp")
6/sqrt(100)
n1 <- 50
n2 <- 50
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 75
n2 <- 75
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 100
n2 <- 100
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 150
n2 <- 150
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 200
n2 <- 200
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 250
n2 <- 250
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
n1 <- 300
n2 <- 300
d <- 2
nsim <- 500
coh_pvals <- rep(NA, nsim)
knn_pvals_10 <- rep(NA, nsim)
knn_pvals_20 <- rep(NA, nsim)
knn_pvals_40 <- rep(NA, nsim)
knn_pvals_adapt <- rep(NA, nsim)
set.seed(123)
for(sim in 1:nsim){
x1 <- matrix(rnorm(n1*d), ncol=d)
x2 <- matrix(rnorm(n2*d, mean=0.4), ncol=d)
x <- rbind(x1, x2)
distM <- as.matrix(dist(x))
cmat <- cohesion_matrixC(distM)
coh <- normalized_edge_test(cmat, n1, n2, 2000)
coh_pvals[sim] <- coh$pval
# knn 10
k <- 10
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_10[sim] <- knn_out$pval
# knn 20
k <- 20
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_20[sim] <- knn_out$pval
# knn 40
k <- 40
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_40[sim] <- knn_out$pval
# knn adapt
k <- floor(0.3*(n1+n2))
knn_mat <- as.matrix(nn2(x, x, k = (k+1))$nn.idx[,-1], ncol = k)
edge_mat <- matrix(0, nrow = n1+n2, ncol=n1+n2)
for(i in 1:nrow(knn_mat)){
for(j in 1:ncol(knn_mat)){
edge_mat[i, knn_mat[i, j]] <- 1
}
}
knn_out <- normalized_edge_test(edge_mat, n1, n2, 2000)
knn_pvals_adapt[sim] <- knn_out$pval
print(sim)
}
mean(knn_pvals_10 < 0.05)
mean(knn_pvals_20 < 0.05)
mean(knn_pvals_40 < 0.05)
mean(coh_pvals < 0.05)
mean(knn_pvals_adapt < 0.05)
