---
title: "Class activity solutions, August 28"
format: html
editor: visual
author: Ciaran Evans
editor_options: 
  chunk_output_type: console
---

### The birthday problem

1.  Creating a vector to store the days of the year (useful for sampling later):

```{r}
days <- 1:365
```

2.  Choosing birthdays:

```{r}
set.seed(33)
n_students <- 30
birthdays <- sample(days, n_students, replace=TRUE)
```

3.  Are there 30 unique birthdays, or do we have a repeated birthday?

```{r}
length(unique(birthdays)) < n_students
```

We have at least one repeated birthday!

4.  Now let's repeat the simulation many times:

```{r}
set.seed(33)

days <- 1:365 # days of the year
n_students <- 30

nsim <- 10000
results <- rep(NA, nsim) # store the simulation results
for(i in 1:nsim){
  birthdays <- sample(days, n_students, replace=TRUE)
  results[i] <- length(unique(birthdays)) < n_students
}

mean(results)
```

The probability of at least one shared birthday is approximately 71%.

5.  How many students do we need for the probability to be approximately 50%? The answer is 23:

```{r}
set.seed(213)

days <- 1:365 # days of the year
n_students <- 23

nsim <- 10000
results <- rep(NA, nsim) # store the simulation results
for(i in 1:nsim){
  birthdays <- sample(days, n_students, replace=TRUE)
  results[i] <- length(unique(birthdays)) < n_students
}

mean(results)
```
