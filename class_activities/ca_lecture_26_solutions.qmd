---
title: "Class activity solutions"
format: html
editor: source
author: "Ciaran Evans"
---

1. 

```{r}
Rcpp::cppFunction('double weighted_sum(NumericVector x, NumericVector w){
  int n = x.size();
  double sum = 0;
  
  for(int i = 0; i < n; ++i){
    sum += x[i]*w[i];
  }
  
  return sum;
}')
```

2.

```{r}
x <- rnorm(1000)
w <- runif(1000)

bench::mark(
  weighted_sum(x, w),
  sum(x * w),
  crossprod(x, w),
  check = F
)
```

3.

```{r}
Rcpp::cppFunction('double varC(NumericVector x){
  int n = x.size();
  
  double mean = 0;
  
  for(int i = 0; i < n; ++i){
    mean += x[i]/n;
  }
  
  double sum = 0;
  
  for(int i = 0; i < n; ++i){
    sum += pow(x[i] - mean, 2);
  }
  
  return sum/(n-1);
}')
```

4.

```{r}
x <- rnorm(1000)

bench::mark(
  var(x),
  varC(x)
)
```

5.

```{r}
Rcpp::cppFunction('NumericMatrix matrix_prod(NumericMatrix A, NumericMatrix B){
  int ncol_a = A.ncol();
  int nrow_a = A.nrow();
  int ncol_b = B.ncol();
  int nrow_b = B.nrow();
  
  NumericMatrix result(nrow_a, ncol_b);
  
  for(int i = 0; i < nrow_a; ++i){
    for(int j = 0; j < ncol_b; ++j){
      double sum = 0;
      for(int k = 0; k < ncol_a; ++k){
        sum += A(i,k)*B(k,j);
      }
      
      result(i,j) = sum;
    }
  }
  
  return result;
}')


A <- matrix(rnorm(10), nrow=2, ncol=5)
B <- matrix(rnorm(15), nrow=5, ncol=3)

A %*% B

matrix_prod(A, B)
```


