r <- 1
x <- rnorm(1000, mean=0, sd=1.2)
y1 <- rpois(1000, lambda = exp(x))
y2 <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y1 ~ x, family = poisson)
m2 <- glm.nb(y1 ~ x)
summary(m1)
summary(m2)
data.frame(x = x, resids = qresid(m1)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Poisson regression on Poisson data") +
theme_bw()
data.frame(x = x, resids = qresid(m2)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Negative binomial regression on Poisson data") +
theme_bw()
set.seed(11)
r <- 1
x <- rnorm(1000, mean=0, sd=1.2)
y1 <- rpois(1000, lambda = exp(x))
y2 <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y1 ~ x, family = poisson)
m2 <- glm.nb(y1 ~ x)
summary(m1)
summary(m2)
m1 <- glm(y2 ~ x, family = poisson)
m2 <- glm.nb(y2 ~ x)
summary(m1)
summary(m2)
data.frame(x = x, resids = qresid(m1)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Poisson regression on negative binomial data") +
theme_bw()
data.frame(x = x, resids = qresid(m2)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Negative binomial regression on negative binomial data") +
theme_bw()
r <- 0.5
x <- rnorm(1000, mean=0, sd=1.2)
y <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
data.frame(x = x, resids = qresid(m1)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Poisson regression") +
theme_bw()
data.frame(x = x, resids = qresid(m2)) %>%
ggplot(aes(x = x, y = resids)) +
geom_point() +
geom_smooth() +
labs(x = "X", y = "Quantile residuals",
title = "Negative binomial regression") +
theme_bw()
x <- rnorm(1000, mean=0, sd=1.2)
y <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
m3 <- glm(y ~ x, family = quasipoisson)
m3
m1
m2
?confint.glm
m1$coefficients
summary(m1)$coefficients
summary(m1)$coefficients[2,2]
summary(m2)$coefficients
qt(0.975, 998)
rs <- c(0.5, 1, 2, 5, 10)
coverage_poisson <- rep(NA, length(rs))
coverage_qp <- rep(NA, length(rs))
coverage_nb <- rep(NA, length(rs))
nsim <- 1000
for(i in 1:length(rs)){
r <- rs[i]
covers_poisson <- rep(NA, nsim)
covers_qp <- rep(NA, nsim)
covers_nb <- rep(NA, nsim)
for(j in 1:nsim){
x <- rnorm(1000, mean=0, sd=1.2)
y <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
m3 <- glm(y ~ x, family = quasipoisson)
lower_p <- m1$coefficients[1] - 1.96*summary(m1)$coefficients[2,2]
upper_p <- m1$coefficients[1] + 1.96*summary(m1)$coefficients[2,2]
lower_nb <- m2$coefficients[1] - 1.96*summary(m2)$coefficients[2,2]
upper_nb <- m2$coefficients[1] + 1.96*summary(m2)$coefficients[2,2]
lower_qp <- m3$coefficients[1] - qt(0.975, 998)*summary(m3)$coefficients[2,2]
upper_qp <- m3$coefficients[1] + qt(0.975, 998)*summary(m3)$coefficients[2,2]
covers_poisson[j] <- lower_p < 1 & upper_p > 1
covers_nb[j] <- lower_nb < 1 & upper_nb > 1
covers_qp[j] <- lower_qp < 1 & upper_qp > 1
}
coverage_poisson[i] <- mean(covers_poisson)
coverage_qp[i] <- mean(covers_qp)
coverage_nb[i] <- mean(covers_nb)
}
rs <- c(0.5, 1, 2, 5, 10)
coverage_poisson <- rep(NA, length(rs))
coverage_qp <- rep(NA, length(rs))
coverage_nb <- rep(NA, length(rs))
nsim <- 200
i <- 1
r <- rs[i]
covers_poisson <- rep(NA, nsim)
covers_qp <- rep(NA, nsim)
covers_nb <- rep(NA, nsim)
for(j in 1:nsim){
x <- rnorm(1000, mean=0, sd=1.2)
y <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
m3 <- glm(y ~ x, family = quasipoisson)
lower_p <- m1$coefficients[1] - 1.96*summary(m1)$coefficients[2,2]
upper_p <- m1$coefficients[1] + 1.96*summary(m1)$coefficients[2,2]
lower_nb <- m2$coefficients[1] - 1.96*summary(m2)$coefficients[2,2]
upper_nb <- m2$coefficients[1] + 1.96*summary(m2)$coefficients[2,2]
lower_qp <- m3$coefficients[1] - qt(0.975, 998)*summary(m3)$coefficients[2,2]
upper_qp <- m3$coefficients[1] + qt(0.975, 998)*summary(m3)$coefficients[2,2]
covers_poisson[j] <- lower_p < 1 & upper_p > 1
covers_nb[j] <- lower_nb < 1 & upper_nb > 1
covers_qp[j] <- lower_qp < 1 & upper_qp > 1
}
mean(covers_poisson)
mean(covers_qp)
mean(covers_nb)
rs <- c(0.5, 1, 2, 5, 10)
coverage_poisson <- rep(NA, length(rs))
coverage_qp <- rep(NA, length(rs))
coverage_nb <- rep(NA, length(rs))
nsim <- 200
for(i in 1:length(rs)){
r <- rs[i]
covers_poisson <- rep(NA, nsim)
covers_qp <- rep(NA, nsim)
covers_nb <- rep(NA, nsim)
for(j in 1:nsim){
x <- rnorm(1000, mean=0, sd=1.2)
y <- rnbinom(1000, size=r, mu=exp(x))
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
m3 <- glm(y ~ x, family = quasipoisson)
lower_p <- m1$coefficients[2] - 1.96*summary(m1)$coefficients[2,2]
upper_p <- m1$coefficients[2] + 1.96*summary(m1)$coefficients[2,2]
lower_nb <- m2$coefficients[2] - 1.96*summary(m2)$coefficients[2,2]
upper_nb <- m2$coefficients[2] + 1.96*summary(m2)$coefficients[2,2]
lower_qp <- m3$coefficients[2] - qt(0.975, 998)*summary(m3)$coefficients[2,2]
upper_qp <- m3$coefficients[2] + qt(0.975, 998)*summary(m3)$coefficients[2,2]
covers_poisson[j] <- lower_p < 1 & upper_p > 1
covers_nb[j] <- lower_nb < 1 & upper_nb > 1
covers_qp[j] <- lower_qp < 1 & upper_qp > 1
}
coverage_poisson[i] <- mean(covers_poisson)
coverage_qp[i] <- mean(covers_qp)
coverage_nb[i] <- mean(covers_nb)
}
data.frame(r = rs, coverage_poisson, coverage_qp, coverage_nb)
data.frame(r = rs, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -r,
names_to = c(".value", "method"),
names_sep = "_")
data.frame(r = rs, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -r,
names_to = c(".value", "method"),
names_sep = "_") |>
ggplot(aes(x = r, y = coverage, color = method)) +
geom_point() +
geom_line() +
theme_bw()
# Function for simulating quasi-Poisson (overdispersed Poisson) data
rqpois <- function(n, mean, dispersion){
return(rnbinom(n, mu = mean, size = mean/(dispersion - 1)))
}
phis <- c(1, 2, 3, 5, 10)
coverage_poisson <- rep(NA, length(rs))
coverage_qp <- rep(NA, length(rs))
coverage_nb <- rep(NA, length(rs))
nsim <- 200
for(i in 1:length(rs)){
covers_poisson <- rep(NA, nsim)
covers_qp <- rep(NA, nsim)
covers_nb <- rep(NA, nsim)
for(j in 1:nsim){
x <- rnorm(1000, mean=0, sd=1.2)
y <- rqpois(1000, mean = exp(x), dispersion = phis[i])
m1 <- glm(y ~ x, family = poisson)
m2 <- glm.nb(y ~ x)
m3 <- glm(y ~ x, family = quasipoisson)
lower_p <- m1$coefficients[2] - 1.96*summary(m1)$coefficients[2,2]
upper_p <- m1$coefficients[2] + 1.96*summary(m1)$coefficients[2,2]
lower_nb <- m2$coefficients[2] - 1.96*summary(m2)$coefficients[2,2]
upper_nb <- m2$coefficients[2] + 1.96*summary(m2)$coefficients[2,2]
lower_qp <- m3$coefficients[2] - qt(0.975, 998)*summary(m3)$coefficients[2,2]
upper_qp <- m3$coefficients[2] + qt(0.975, 998)*summary(m3)$coefficients[2,2]
covers_poisson[j] <- lower_p < 1 & upper_p > 1
covers_nb[j] <- lower_nb < 1 & upper_nb > 1
covers_qp[j] <- lower_qp < 1 & upper_qp > 1
}
coverage_poisson[i] <- mean(covers_poisson)
coverage_qp[i] <- mean(covers_qp)
coverage_nb[i] <- mean(covers_nb)
}
data.frame(phi = phis, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -phi,
names_to = c(".value", "method"),
names_sep = "_") |>
ggplot(aes(x = r, y = coverage, color = method)) +
geom_point() +
geom_line() +
theme_bw()
phis
coverage_poisson
data.frame(phi = phis, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -phi,
names_to = c(".value", "method"),
names_sep = "_") |>
ggplot(aes(x = r, y = coverage, color = method)) +
geom_point() +
geom_line() +
theme_bw()
data.frame(phi = phis, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -phi,
names_to = c(".value", "method"),
names_sep = "_") |>
ggplot(aes(x = phi, y = coverage, color = method)) +
geom_point() +
geom_line() +
theme_bw()
data.frame(phi = phis, coverage_poisson, coverage_qp, coverage_nb) |>
pivot_longer(cols = -phi,
names_to = c(".value", "method"),
names_sep = "_") |>
ggplot(aes(x = phi, y = coverage, color = method)) +
geom_point() +
geom_line() +
theme_bw()
reticulate::repl_python()
gs4_deauth()
litF <- read_sheet("https://docs.google.com/spreadsheets/d/1hDinTIRHQIaZg1RUn6Z_6mo12PtKwEPFIz_mJVF6P5I/pub?gid=0")
litF
litF |>
rename(country = starts_with("Adult")) |>
pivot_longer(
cols = -country,
names_to = "year",
values_to = "literacy_rate"
) |>
drop_na(literacy_rate)
reticulate::repl_python()
litF |>
rename(country = starts_with("Adult")) |>
pivot_longer(
cols = -country,
names_to = "year",
values_to = "literacy_rate"
) |>
drop_na(literacy_rate)
reticulate::repl_python()
df2 = data.frame(id = c(1, 2, 3),
bp_1 = c(100, 120, 125),
bp_2 = c(120, 115, 130),
hr_1 = c(60, 75, 80),
hr_2 = c(77, 81, 93))
df2
df2 |>
pivot_longer(cols = -id,
names_to = c("measurement", "stage"),
names_sep = "_",
values_to = "value")
df2 |>
pivot_longer(cols = -id,
names_to = "measurement",
values_to = "value")
reticulate::repl_python()
air_quality.pivot(columns = 'location', values = 'value')
reticulate::repl_python()
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m1
m1$loglik
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m2 <- hurdle(drinks ~ FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
2*(m1$loglik - m2$loglik)
pchisq(2*(m1$loglik - m2$loglik), 2)
summary(m1)
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m2 <- hurdle(drinks ~ FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
2*(m1$loglik - m2$loglik)
pchisq(2*(m1$loglik - m2$loglik), 2, lower.tail=F)
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m2 <- hurdle(drinks ~ sex + FirstYear + OffCampus | FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m2$coefficients
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m2 <- hurdle(drinks ~ sex + FirstYear + OffCampus | FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
pchisq(2*(m1$loglik - m2$loglik), df=1, lower.tail=F)
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
summary(m1)
pnorm(5.233, lower.tail=F)
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
summary(m1)
pnorm(5.233, lower.tail=F)
m1 <- hurdle(visits ~ ., dist = "negbin", zero.dist = "binomial", data = nmes)
summary(m1)
colnames(nmes)
m2 <- hurdle(visits ~ hospital + health + chronic +
gender + insurance,
dist = "negbin", zero.dist = "binomial", data = nmes)
pchisq(2*(m1$loglik - m2$loglik), 2, lower.tail=F)
pnorm(7.406, lower.tail=F)
summary(m1)$coefficients
pnorm(-2.108, lower.tail=T)
sim_results <- read.csv("https://sta279-f23.github.io/homework/sim_results.csv")
sim_results
sim_results|>
mutate(across(starts_with("method"),
function(x){2-x}))|>
rowwise()|>
mutate(method1_coverage=mean(c_across(starts_with("method1"))),
method2_coverage=mean(c_across(starts_with("method2"))),
method3_coverage=mean(c_across(starts_with("method3"))))
my_lm <- function(X_mat, y){
return(solve(t(X_mat) %*% X_mat) %*% t(X_mat) %*% y)
}
n <- 100
x <- rnorm(n)
noise <- rnorm(n)
y <- 1 + x + noise
lm(y ~ x)
X_mat <- cbind(1, x)
my_lm(X_mat, y)
grep("item", "item: ab1")
grep("item", "ab1")
grep("item", "ab1 : item")
grep("item", "ab1 : item item")
?grep
grepl("item", "ab1 : item item")
?gsub
gsub("item: ", "", "item: a")
gsub("item: ", "", c("item: a", "item: b"))
?factorial
factorial(5)
factorial(7)
?pivot_longer
a <- 1:5
b <- 1:4
a - b
a <- 1:6
b <- 1:3
a-b
a - rep(b, length(a)/length(b))
df1 <- data.frame(
grp = c("A", "A", "B", "B"),
sex = c("F", "M", "F", "M"),
meanL = c(0.225, 0.47, 0.325, 0.547),
sdL = c(0.106, 0.325, 0.106, 0.308),
meanR = c(0.34, 0.57, 0.4, 0.647),
sdR = c(0.0849, 0.325, 0.0707, 0.274)
)
reticulate::repl_python()
df2 <- data.frame(id = rep(c(1, 2, 3), 2),
group = rep(c("T", "C"), each=3),
vals = c(4, 6, 8, 5, 6, 10))
reticulate::repl_python()
sim_results <- read.csv("https://sta279-f23.github.io/homework/sim_results.csv")
sim_results
reticulate::repl_python()
x <- c("a", "b", 2)
x
x[3]
x[3] + 1
reticulate::repl_python()
x <- 1:3
x + 1
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
sim_results <- read.csv("https://sta279-f23.github.io/homework/sim_results.csv")
reticulate::repl_python()
library(tidyverse)
wdrinks <- read.csv("~/Documents/Teaching/sta279-s22.github.io/slides/weekendDrinks.csv")
FirstYear <- ifelse( wdrinks$dorm %in% c("mohn","kittlesby", "kildahl"), "TRUE", "FALSE")
OffCampus <- ifelse( wdrinks$dorm == "off campus", "TRUE", "FALSE")
wdrinks <- cbind(wdrinks, FirstYear, OffCampus)
library(pscl)
m1 <- hurdle(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson", zero.dist = "binomial",
data = wdrinks)
m1$coefficients
?zeroinf
zeroinfl
?zeroinfl
m1$coefficients
zeroinfl(drinks ~ sex + FirstYear + OffCampus,
dist = "poisson",
data = wdrinks)
reticulate::repl_python()
exp(0.046)
exp(2.928355 -0.022436 -0.045601)
17.5*(0.49)
?planes
library(nycflights13)
?planes
?left_join
airports
airlines
planes
weather
flights2 |>
head(3)
library(nycflights13)
library(tidyverse)
flights2 <- flights |>
select(year, time_hour, origin, dest, tailnum, carrier)
flights2 |>
head(3)
flights2 |>
left_join(weather |> select(origin, time_hour, temp, wind_speed),
join_by(origin, time_hour))
patients |>
left_join(doctors, join_by(provider))
patients <- data.frame(
age = c(23, 47, 38),
insurance = c("Aetna", "BCBS", "Medicaid"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang")
)
doctors <- data.frame(
provider = c("Dr. Foyle", "Dr. Renard", "Dr. Zhang"),
location = c("Greensboro", "Winston-Salem", "Winston-Salem")
)
patients
doctors
patients |>
left_join(doctors, join_by(provider))
reticulate::repl_python()
patients <- data.frame(
age = c(23, 47, 38),
insurance = c("Aetna", "BCBS", "Medicaid"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang")
)
doctors <- data.frame(
name = c("Dr. Foyle", "Dr. Renard", "Dr. Zhang"),
location = c("Greensboro", "Winston-Salem", "Winston-Salem")
)
patients |>
left_join(doctors, join_by(provider == name))
reticulate::repl_python()
patients <- data.frame(
age = c(23, 47, 38),
insurance = c("Aetna", "BCBS", "Medicaid"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang"), name = ("A", "B", "C")
patients <- data.frame(
age = c(23, 47, 38),
insurance = c("Aetna", "BCBS", "Medicaid"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang"), name = ("A", "B", "C"))
patients <- data.frame(
age = c(23, 47, 38),
insurance = c("Aetna", "BCBS", "Medicaid"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang"),
name = c("A", "B", "C")
)
reticulate::repl_python()
patients <- data.frame(
age = c(23, 47, 38, 54),
insurance = c("Aetna", "BCBS", "Medicaid", "Humana"),
provider = c("Dr. Zhang", "Dr. Foyle", "Dr. Zhang", "Dr. Renard")
)
insurance <- data.frame(
company = c("Anthem", "BCBS", "Kaiser", "Medicaid"),
phone = c("800-676-2583", "877-258-3334", "800-810-4766", "877-201-3750")
)
patients
insurance
patients |>
inner_join(insurance, join_by(insurance == company))
reticulate::repl_python()
